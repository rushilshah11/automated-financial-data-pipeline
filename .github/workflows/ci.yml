name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # STEP 1: Define the temporary, isolated PostgreSQL service for tests
    services:
      postgres:
        image: postgres:15-alpine 
        env:
          # Temporary CI credentials (used by the SQLAlchemy URL below)
          POSTGRES_USER: ci_test_user
          POSTGRES_PASSWORD: ci_test_password
          POSTGRES_DB: ci_test_db
        options: >-
          --health-cmd "pg_isready -U ci_test_user -d ci_test_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
          --start-period 10s

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      # STEP 2: Inject ALL 9 required environment variables
      - name: Run tests
        env:
          # 1. DATABASE CONNECTION: Points to the temporary 'postgres' service
          SQLALCHEMY_DATABASE_URL: postgresql+psycopg2://ci_test_user:ci_test_password@postgres:5432/ci_test_db
          
          # 2. JWT/SECURITY KEYS (Dummy values to satisfy Pydantic validation)
          JWT_SECRET_KEY: "super-secret-ci-key"
          JWT_ALGORITHM: "HS256"
          
          # 3. EXTERNAL SERVICE KEYS (Dummy values to satisfy Pydantic validation)
          FINNHUB_API_KEY: "dummy-finnhub-key"
          EMAIL_FROM_ADDRESS: "ci@test.com"
          S3_BUCKET_NAME: "ci-test-bucket"
          AWS_ACCESS_KEY_ID: "dummy-key-id"
          AWS_SECRET_ACCESS_KEY: "dummy-secret-key"
          AWS_REGION_NAME: "us-east-1"
          
        run: pytest